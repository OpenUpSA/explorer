{% load static %}
{% load leaflet_tags %}
<!DOCTYPE html>
<html lang="en">
    <head>
	<meta charset="utf-8"/>
	<link rel="stylesheet" href="{% static 'explorer/css/semantic.min.css' %}">
	<script src="{% static 'explorer/js/jquery.js' %}"></script>
	<script src="{% static 'explorer/js/semantic.min.js' %}"></script>
	{% leaflet_js %}
	<script defer src="{% static 'explorer/js/vue.min.js' %}"></script>
	<script defer src="{% static 'explorer/js/explorer.js' %}"></script>
	{% leaflet_css %}
	
	
    </head>
    <body>
	<style>
	 #southafrica {
	     height: 800px;
	     width: 100%;
	 }
	 body.pushable>.pusher {
	     background: #FFFFFF;
	 }
	</style>
	<div class="ui visible white sidebar vertical menu">
	    <h3> Explorer <small>v0.2</small></h3>
	    <div class="ui secondary menu borderless">
		<a class="popup item active" data-tab="layers" data-content="Dataset Layers">
		    <i class="bars icon"></i>
		</a>
		<a class="popup item" data-tab="filters" data-content="Layer Filters">
		    <i class="filter icon"></i>
		</a>
		<a class="popup item" data-tab="tooltips" data-content="Tooltips">
		    <i class="map marker icon"></i>
		</a>
	    </div>
	    <div class="ui big list tab active" data-tab="layers" id="layers">
		<div class="header item">Layers</div>
		<div class="ui divider"></div>
		<div class="ui selection dropdown">
		    <input type="hidden" name="boundaries" v-model="boundarySelected"
			   v-on:change="boundarySelected=$event.target.value">
		    <i class="dropdown icon"></i>
		    <div class="default text">Boundry</div>
		    <div class="menu">
			<div class="item" v-for="(item, key) in boundaries" v-bind:data-value="key">[[key]]</div>
		    </div>
		</div>
		<div class="ui item"
		     v-for="(item,key) in layers"
		     v-bind:key="key">
		    <span>
			<span v-bind:class="layerColour(item)"></span>
			[[key]]
			<i class="right aligned trash alternate icon link"
			   v-on:click="removeLayer(key)">
			</i>
		    </span>
		</div>
		<br>
		<br>
		<button v-on:click="fetchLayers" class="ui black basic button right aligned">
		    <i class="plus icon"></i>
		    Add Layer
		</button>
	    </div>
	    <div class="ui tab" data-tab="filters" id="filters">
		<div class="header item">Filters</div>
		<div v-for="(item,key) in conditions">
		    <form class="ui form" v-for="(cond, index) in item.conditions">
			<span v-bind:class="filterColour(item.colour)">
			    [[key]]
			</span>
			<i class="righ aligned trash alternate icon link" v-on:click="removeCondition(key, index)"></i>
			<div class="field">
			    <label>Column</label>
			    <select class="ui fluid dropdown">
				<option value="cond.column">
				    [[cond.column]]
				</option>
			    </select>
			</div>
			<div class="field">
			    <label>Value</label>
			    <div class="ui fluid search selection dropdown" id="filter-dropdown">
				<input type="text">
				<i class="dropdown icon"></i>
				<div class="default text">[[cond.value]]</div>
				<div class="menu">
				    <div class="item" data-value="cond.value">
					[[cond.value]]
				    </div>
				</div>
			    </div>
			</div>
			<div class="ui divider"></div>
		    </form>
		</div>
		<form class="ui form" v-bind:style="{display:displayMenu}">
		    <div class="field">
			<label>Data Source</label>
			<select class="ui fluid dropdown" v-model="sourceSelected" v-on:change="onSelectedSource">
			    <option value="">Data Source</option>
			    <option v-for="source in sources" v-bind:value="source">
				[[source]]
			    </option>
			</select>
		    </div>
		    <div class="field">
			<label>Column</label>
			<select class="ui fluid dropdown"
				v-model="columnSelected"
				v-on:change='onSelectedColumn'>
			    <option value="">Column</option>
			    <option v-for="col in currentColumns" v-bind:value="col">
				[[col]]
			    </option>
			</select>
		    </div>
		    <div class="field">
			<label>Value</label>
			<div class="ui fluid search selection dropdown">
			    <input type="hidden"
				   v-model="valueSelected"
				   v-on:change="valueSelected=$event.target.value">
			    <i class="dropdown icon"></i>
			    <div class="default text"></div>
			    <div class="menu">
				<div class="item" v-for="val in currentValues"
				     v-bind:data-value="val">
				    [[val]]
				</div>
			    </div>
			</div>
		    </div>
		    <div class="ui mini blue right floated button" v-on:click="done">
			<i class="check icon"></i>
			Done
		    </div>
		</form>
		<br>
		<br>
		<div class="ui button" v-on:click="addCondition">
		    <i class="plus icon"></i>
		    Add Condition
		</div>
	    </div>
	    <div class="ui tab" data-tab="tooltips" id="tooltips">
		<div class="header item">Tooltips</div>
		<form class="ui form" v-for="(items,key) in headers" v-bind:id="key">
		    <div class="field">
			<label>[[key]]</label>
			<div class="ui fluid multiple selection dropdown" id="multi-tooltip">
			    <input type="hidden"
				   name="columns"
				   v-model="tipSelected[key]"
				   v-on:change="tipSelected[key]=$event.target.value">
			    <i class="dropdown icon"></i>
			    <div class="default text">Select columns as tooltips</div>
			    <div class="menu">
				<div class="item" v-for="col in items.columns" v-bind:data-value="col" v-bind:key="col">[[col]]</div>
			    </div>
			</div>
		    </div>
		    <div class="ui blue mini button right floated" v-on:click="done(key)" v-bind:key="key">
			<i class="check icon"></i>
			Update
		    </div>
		</form>
	    </div>
			</div>
	<div class="ui grid pusher">
	    {% leaflet_map "southafrica" callback="window.map_init_basic" %}
	</div>
	<div class="ui modal">
	    <div class="header">Select a Dataset Layer</div>
	    <div class="content">
		<div class="ui massive list" id="datasetOptions">
		    <a class="item"
		       v-for="dataset in datasets"
		       v-bind:key="dataset.id"
		       v-on:click="addToLayer(dataset)">
			[[dataset.name]]
		    </a>
		</div>
	    </div>
	</div>
    </body>
</html>
